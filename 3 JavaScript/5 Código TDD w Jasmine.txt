//Devuelve la suma de 1 a N. Por ejemplo,  Sum1toN(3) devolverá la suma de 1+2+3, la cual es 6
//sum1toN(255) devuelve la suma de todos los números de 1 a 255
function Sum1toN(n){
    var sum=0;
    for(var i=1;i<=n;i++){
        sum=sum+i;
    }
    return sum;
}
console.log(Sum1toN(255));

//devuelve la suma del primer y último número en el array

function sumFirstLast(arr){
    if(arr.length>0){
        let sum=arr[0]+arr[arr.length-1]
        return sum;
    }
    else{
        return null;
    }
}
console.log(sumFirstLast([1,2]));

// devuelve la suma del número más grande y el más pequeño del array.
function sumMaxMin(arr){
    var max=arr[0];
    var min=arr[0];
    for(var i=0;i<arr.length;i++){
        if(max<arr[i]){
            max=arr[i];
        }
        if(min>arr[i]){
            min=arr[i];
        }
    }
    return max+min;
} 
console.log(sumMaxMin([1,3,10]));

describe("Sum1toN", function() { 
    it("should return 3 when we pass 2 as an argument", function() { 
        expect(Sum1toN(2)).toEqual(3); 
    }); 
    it("should return 6 when we pass 3 as an argument", function() { 
        expect(Sum1toN(3)).toEqual(6); 
    }); 
    it("should return 10 when we pass 4 as an argument", function() { 
        expect(Sum1toN(4)).toEqual(10); 
    });
    it("should return 1275 when we pass 50 as an argument", function() { 
        expect(Sum1toN(50)).toEqual(1275); 
    });
    it("should return 5050 when we pass 100 as an argument", function() { 
        expect(Sum1toN(100)).toEqual(5050); 
    });

});
describe("sumFirstLast", function() { 
    it("should return 3 when we pass [1,2] as an argument", function() { 
        expect(sumFirstLast([1,2])).toEqual(3); 
    }); 
    it("should return 10 when we pass [2,3,8] as an argument", function() { 
        expect(sumFirstLast([2,3,8])).toEqual(10); 
    }); 
    it("should return -10 when we pass [-6,23,3,-4] as an argument", function() { 
        expect(sumFirstLast([-6,23,3,-4])).toEqual(-10); 
    }); 
    it("should return -5 when we pass [-6,4,2,1] as an argument", function() { 
        expect(sumFirstLast([-6,4,2,1])).toEqual(-5); 
    }); 
    it("should return null when we pass [] as an argument", function() { 
        expect(sumFirstLast([])).toEqual(null); 
    }); 
});   
describe("sumMaxMin", function() { 
    it("should return 11 when we pass [1,3,10] as an argument", function() { 
        expect(sumMaxMin([1,3,10])).toEqual(11); 
    }); 
    it("should return -12 when we pass [-2,-5,-10] as an argument", function() { 
        expect(sumMaxMin([-2,-5,-10])).toEqual(-12); 
    }); 
    it("should return -10 when we pass [-5,-2,-3,-8] as an argument", function() { 
        expect(sumMaxMin([-5,-2,-3,-8])).toEqual(-10); 
    }); 
});
